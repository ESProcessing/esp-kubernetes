apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  PGDATA: /mnt/data/DB/postgres
  POSTGRES_USER: esp   # also the dfeault POSTGRES_DB
  POSTGRES_PASSWORD: esp_in_cloud
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: espdb-config
data:
    init-esp.sh: |-
       #!/bin/bash
       set -e
       
       psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
           -- CREATE SCHEMA streamviewer;
           -- CREATE SCHEMA studio;
       EOSQL      
---
kind: Service
apiVersion: v1 
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP            # TCP
      targetPort: 5432
      port: 80              
  type: ClusterIP
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
     matchLabels:
       app: postgres
  template:
       metadata:
         labels:
           app: postgres
       spec:
         containers:
         - name: postgres
           image: postgres:10.4
           securityContext:
             runAsUser:  1001
             runAsGroup: 1001
           ports:
             - containerPort: 5432  # servers REST port
               name: postgresdb
           envFrom:
             - configMapRef: 
                name: postgres-config
           volumeMounts:
              - name: data            # the volume specified below
                mountPath: /mnt/data  # path persistent volume gets mounted to
                subPath: TEMPLATE_ESP_NAMESPACE
              - name: postgres-init   # the volume specified belows
                mountPath: /docker-entrypoint-initdb.d  # path persistent volume gets mounted to
                readOnly: true
         initContainers:
         - name: config-data
           image: busybox
           #
           # Our nfs PV is owned by sas:sas which is 1001:1001, so
           #    use those credentials to make <namespace>/{DB,input,output}
           #    directories.
           #
           securityContext:
             runAsUser:  1001
             runAsGroup: 1001
           command: ['sh', '-c', 'mkdir -p /mnt/data/TEMPLATE_ESP_NAMESPACE/DB/postgres']
           volumeMounts:
           - name: data
             mountPath: /mnt/data
         volumes:
           - name: data
             persistentVolumeClaim:
               claimName: esp-pv
           - name: postgres-init
             configMap:
               name: espdb-config
               items:
               - key: init-esp.sh
                 path: init-esp.sh
            
